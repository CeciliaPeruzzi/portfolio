{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chechu Peruzzi\\\\Desktop\\\\portfoliocp\\\\portfolio\\\\portfolio\\\\src\\\\components\\\\Contacto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Contacto() {\n  _s();\n  const [nombre, setNombre] = useState('');\n  const [apellido, setApellido] = useState('');\n  const [email, setEmail] = useState('');\n  const [mensaje, setMensaje] = useState('');\n\n  // Función para manejar el envío del formulario\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3001/enviar-formulario', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          nombre,\n          apellido,\n          email,\n          mensaje\n        })\n      });\n      if (response.ok) {\n        console.log('Formulario enviado con éxito');\n      } else {\n        console.error('Error al enviar el formulario');\n      }\n    } catch (error) {\n      console.error('Error al enviar el formulario', error);\n    }\n\n    // Aquí puedes agregar la lógica para enviar los datos del formulario a tu correo electrónico o a través de una API\n    // Puedes utilizar librerías como axios para hacer solicitudes HTTP\n\n    // Luego de manejar el envío, puedes reiniciar los estados del formulario\n    setNombre('');\n    setApellido('');\n    setEmail('');\n    setMensaje('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contacto-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Contacto\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contacto\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nombre\",\n          name: \"nombre\",\n          value: nombre,\n          onChange: e => setNombre(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"apellido\",\n          children: \"Apellido:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"apellido\",\n          name: \"apellido\",\n          value: apellido,\n          onChange: e => setApellido(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mensaje\",\n          children: \"Escribe un mensaje:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"mensaje\",\n          name: \"mensaje\",\n          rows: \"4\",\n          value: mensaje,\n          onChange: e => setMensaje(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"enviar\",\n          type: \"submit\",\n          children: \"Enviar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Contacto, \"46Wog6DNuU/2lqzm6TEBLrZMLyw=\");\n_c = Contacto;\n;\nexport default Contacto;\nvar _c;\n$RefreshReg$(_c, \"Contacto\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Contacto","_s","nombre","setNombre","apellido","setApellido","email","setEmail","mensaje","setMensaje","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","name","value","onChange","target","required","rows","_c","$RefreshReg$"],"sources":["C:/Users/Chechu Peruzzi/Desktop/portfoliocp/portfolio/portfolio/src/components/Contacto.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Contacto() {\r\n  const [nombre, setNombre] = useState('');\r\n  const [apellido, setApellido] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [mensaje, setMensaje] = useState('');\r\n\r\n  // Función para manejar el envío del formulario\r\n  const handleSubmit = async(e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://localhost:3001/enviar-formulario', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ nombre, apellido, email, mensaje }),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        console.log('Formulario enviado con éxito');\r\n      } else {\r\n        console.error('Error al enviar el formulario');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al enviar el formulario', error);\r\n    }\r\n  \r\n\r\n    // Aquí puedes agregar la lógica para enviar los datos del formulario a tu correo electrónico o a través de una API\r\n    // Puedes utilizar librerías como axios para hacer solicitudes HTTP\r\n\r\n    // Luego de manejar el envío, puedes reiniciar los estados del formulario\r\n    setNombre('');\r\n    setApellido('');\r\n    setEmail('');\r\n    setMensaje('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"contacto-container\">\r\n      <h1>Contacto</h1>\r\n\r\n      <div className=\"contacto\"> \r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"nombre\">Nombre:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"nombre\"\r\n          name=\"nombre\"\r\n          value={nombre}\r\n          onChange={(e) => setNombre(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"apellido\">Apellido:</label>\r\n        <input type=\"text\" id=\"apellido\" name=\"apellido\" value={apellido} onChange={(e) => setApellido(e.target.value)} required />\r\n\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n\r\n        <label htmlFor=\"mensaje\">Escribe un mensaje:</label>\r\n        <textarea\r\n          id=\"mensaje\"\r\n          name=\"mensaje\"\r\n          rows=\"4\"\r\n          value={mensaje}\r\n          onChange={(e) => setMensaje(e.target.value)}\r\n          required\r\n        ></textarea>\r\n\r\n        <button className= \"enviar\" type=\"submit\">Enviar</button>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contacto;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}